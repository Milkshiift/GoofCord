// This file is auto-generated. Any changes will be lost. See genSettingsTypes.mjs script

export type ConfigKey = "locale" | "discordUrl" | "arrpc" | "minimizeToTray" | "startMinimized" | "launchWithOsBoot" | "spellcheck" | "updateNotification" | "customTitlebar" | "dynamicIcon" | "customIconPath" | "trayIcon" | "autoscroll" | "popoutWindowAlwaysOnTop" | "transparency" | "modNames" | "modEtagCache" | "customJsBundle" | "customCssBundle" | "noBundleUpdates" | "installDefaultShelterPlugins" | "invidiousEmbeds" | "messageEncryption" | "encryptionPasswords" | "encryptionCover" | "encryptionMark" | "domOptimizer" | "renderingOptimizations" | "forceDiscreteGPU" | "firewall" | "customFirewallRules" | "blocklist" | "blockedStrings" | "allowedStrings" | "screensharePreviousSettings" | "windowState:main" | "autoSaveCloud" | "cloudHost" | "cloudToken" | "cloudEncryptionKey";

export type ConfigValue<K extends ConfigKey> = K extends keyof {
    "locale": string;
    "discordUrl": string;
    "arrpc": boolean;
    "minimizeToTray": boolean;
    "startMinimized": boolean;
    "launchWithOsBoot": boolean;
    "spellcheck": boolean;
    "updateNotification": boolean;
    "customTitlebar": boolean;
    "dynamicIcon": boolean;
    "customIconPath": string;
    "trayIcon": string;
    "autoscroll": boolean;
    "popoutWindowAlwaysOnTop": boolean;
    "transparency": boolean;
    "modNames": string[];
    "modEtagCache": object;
    "customJsBundle": string;
    "customCssBundle": string;
    "noBundleUpdates": boolean;
    "installDefaultShelterPlugins": boolean;
    "invidiousEmbeds": boolean;
    "messageEncryption": boolean;
    "encryptionPasswords": string[];
    "encryptionCover": string;
    "encryptionMark": string;
    "domOptimizer": boolean;
    "renderingOptimizations": boolean;
    "forceDiscreteGPU": boolean;
    "firewall": boolean;
    "customFirewallRules": boolean;
    "blocklist": string[];
    "blockedStrings": string[];
    "allowedStrings": string[];
    "screensharePreviousSettings": [number, number, boolean, string];
    "windowState:main": [boolean, [number, number]];
    "autoSaveCloud": boolean;
    "cloudHost": string;
    "cloudToken": string;
    "cloudEncryptionKey": string;
} ? {
    "locale": string;
    "discordUrl": string;
    "arrpc": boolean;
    "minimizeToTray": boolean;
    "startMinimized": boolean;
    "launchWithOsBoot": boolean;
    "spellcheck": boolean;
    "updateNotification": boolean;
    "customTitlebar": boolean;
    "dynamicIcon": boolean;
    "customIconPath": string;
    "trayIcon": string;
    "autoscroll": boolean;
    "popoutWindowAlwaysOnTop": boolean;
    "transparency": boolean;
    "modNames": string[];
    "modEtagCache": object;
    "customJsBundle": string;
    "customCssBundle": string;
    "noBundleUpdates": boolean;
    "installDefaultShelterPlugins": boolean;
    "invidiousEmbeds": boolean;
    "messageEncryption": boolean;
    "encryptionPasswords": string[];
    "encryptionCover": string;
    "encryptionMark": string;
    "domOptimizer": boolean;
    "renderingOptimizations": boolean;
    "forceDiscreteGPU": boolean;
    "firewall": boolean;
    "customFirewallRules": boolean;
    "blocklist": string[];
    "blockedStrings": string[];
    "allowedStrings": string[];
    "screensharePreviousSettings": [number, number, boolean, string];
    "windowState:main": [boolean, [number, number]];
    "autoSaveCloud": boolean;
    "cloudHost": string;
    "cloudToken": string;
    "cloudEncryptionKey": string;
}[K] : never;

export type Config = Map<ConfigKey, ConfigValue<ConfigKey>>;